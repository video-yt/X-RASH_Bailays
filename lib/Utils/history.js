Object.defineProperty(exports,"__esModule",{value:!0});exports.getHistoryMsg=exports.downloadAndProcessHistorySyncNotification=exports.processHistoryMessage=exports.downloadHistory=void 0;
const util_1=require("util"),zlib_1=require("zlib"),WAProto_1=require("../../WAProto"),Types_1=require("../Types"),WABinary_1=require("../WABinary"),generics_1=require("./generics"),messages_1=require("./messages"),messages_media_1=require("./messages-media"),inflatePromise=(0,util_1.promisify)(zlib_1.inflate),downloadHistory=async(a,d)=>{a=await (0,messages_media_1.downloadContentFromMessage)(a,"md-msg-hist",{options:d});d=[];for await(var e of a)d.push(e);e=Buffer.concat(d);e=await inflatePromise(e);
return WAProto_1.proto.HistorySync.decode(e)};exports.downloadHistory=downloadHistory;
const processHistoryMessage=a=>{var d,e,g;const h=[],f=[],k=[];switch(a.syncType){case WAProto_1.proto.HistorySync.HistorySyncType.INITIAL_BOOTSTRAP:case WAProto_1.proto.HistorySync.HistorySyncType.RECENT:case WAProto_1.proto.HistorySync.HistorySyncType.FULL:case WAProto_1.proto.HistorySync.HistorySyncType.ON_DEMAND:for(const b of a.conversations){f.push({id:b.id,name:b.name||void 0});var c=b.messages||[];delete b.messages;delete b.archived;delete b.muteEndTime;delete b.pinned;for(const l of c)c=
l.message,h.push(c),null!==(d=b.messages)&&void 0!==d&&d.length||(b.messages=[{message:c}]),c.key.fromMe||b.lastMessageRecvTimestamp||(b.lastMessageRecvTimestamp=(0,generics_1.toNumber)(c.messageTimestamp)),(c.messageStubType===Types_1.WAMessageStubType.BIZ_PRIVACY_MODE_TO_BSP||c.messageStubType===Types_1.WAMessageStubType.BIZ_PRIVACY_MODE_TO_FB)&&(null===(e=c.messageStubParameters)||void 0===e?0:e[0])&&f.push({id:c.key.participant||c.key.remoteJid,verifiedName:null===(g=c.messageStubParameters)||
void 0===g?void 0:g[0]});(0,WABinary_1.isJidUser)(b.id)&&b.readOnly&&b.archived&&delete b.readOnly;k.push({...b})}break;case WAProto_1.proto.HistorySync.HistorySyncType.PUSH_NAME:for(c of a.pushnames)f.push({id:c.id,notify:c.pushname})}return{chats:k,contacts:f,messages:h,syncType:a.syncType,progress:a.progress}};exports.processHistoryMessage=processHistoryMessage;const downloadAndProcessHistorySyncNotification=async(a,d)=>{a=await (0,exports.downloadHistory)(a,d);return(0,exports.processHistoryMessage)(a)};
exports.downloadAndProcessHistorySyncNotification=downloadAndProcessHistorySyncNotification;const getHistoryMsg=a=>{var d;a=a?(0,messages_1.normalizeMessageContent)(a):void 0;return null===(d=null===a||void 0===a?void 0:a.protocolMessage)||void 0===d?void 0:d.historySyncNotification};exports.getHistoryMsg=getHistoryMsg;
