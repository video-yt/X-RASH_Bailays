var __createBinding=this&&this.__createBinding||(Object.create?function(a,b,c,d){void 0===d&&(d=c);var e=Object.getOwnPropertyDescriptor(b,c);if(!e||("get"in e?!b.__esModule:e.writable||e.configurable))e={enumerable:!0,get:function(){return b[c]}};Object.defineProperty(a,d,e)}:function(a,b,c,d){void 0===d&&(d=c);a[d]=b[c]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(a,b){Object.defineProperty(a,"default",{enumerable:!0,value:b})}:function(a,b){a["default"]=b}),__importStar=
this&&this.__importStar||function(){var a=function(b){a=Object.getOwnPropertyNames||function(c){var d=[],e;for(e in c)Object.prototype.hasOwnProperty.call(c,e)&&(d[d.length]=e);return d};return a(b)};return function(b){if(b&&b.__esModule)return b;var c={};if(null!=b)for(var d=a(b),e=0;e<d.length;e++)"default"!==d[e]&&__createBinding(c,b,d[e]);__setModuleDefault(c,b);return c}}(),__importDefault=this&&this.__importDefault||function(a){return a&&a.__esModule?a:{"default":a}};
Object.defineProperty(exports,"__esModule",{value:!0});
exports.getStatusCodeForMediaRetry=exports.decryptMediaRetryData=exports.decodeMediaRetryNode=exports.encryptMediaRetryRequest=exports.getWAUploadToServer=exports.downloadEncryptedContent=exports.downloadContentFromMessage=exports.getUrlFromDirectPath=exports.encryptedStream=exports.getHttpStream=exports.getStream=exports.toBuffer=exports.toReadable=exports.mediaMessageSHA256B64=exports.generateProfilePicture=exports.encodeBase64EncodedStringForUpload=exports.extractImageThumb=exports.hkdfInfoKey=
void 0;exports.getMediaKeys=getMediaKeys;exports.getAudioDuration=getAudioDuration;exports.getAudioWaveform=getAudioWaveform;exports.generateThumbnail=generateThumbnail;exports.extensionForMediaMessage=extensionForMediaMessage;
const boom_1=require("@hapi/boom"),axios_1=__importDefault(require("axios")),child_process_1=require("child_process"),Crypto=__importStar(require("crypto")),events_1=require("events"),fs_1=require("fs"),os_1=require("os"),path_1=require("path"),stream_1=require("stream"),WAProto_1=require("../../WAProto"),Defaults_1=require("../Defaults"),WABinary_1=require("../WABinary"),crypto_1=require("./crypto"),generics_1=require("./generics"),getTmpFilesDirectory=()=>(0,os_1.tmpdir)(),getImageProcessingLibrary=
async()=>{const [a,b]=await Promise.all([(async()=>await Promise.resolve().then(()=>__importStar(require("jimp"))).catch(()=>{}))(),(async()=>await Promise.resolve().then(()=>__importStar(require("sharp"))).catch(()=>{}))()]);if(b)return{sharp:b};const c=(null===a||void 0===a?void 0:a.default)||a;if(c)return{jimp:c};throw new boom_1.Boom("No image processing library available");},hkdfInfoKey=a=>`WhatsApp ${Defaults_1.MEDIA_HKDF_KEY_MAPPING[a]} Keys`;exports.hkdfInfoKey=hkdfInfoKey;
async function getMediaKeys(a,b){if(!a)throw new boom_1.Boom("Cannot derive from empty media key");"string"===typeof a&&(a=Buffer.from(a.replace("data:;base64,",""),"base64"));a=await (0,crypto_1.hkdf)(a,112,{info:(0,exports.hkdfInfoKey)(b)});return{iv:a.slice(0,16),cipherKey:a.slice(16,48),macKey:a.slice(48,80)}}
const extractVideoThumb=async(a,b,c,d)=>new Promise((e,k)=>{(0,child_process_1.exec)(`ffmpeg -ss ${c} -i ${a} -y -vf scale=${d.width}:-1 -vframes 1 -f image2 ${b}`,h=>{h?k(h):e()})}),extractImageThumb=async(a,b=32)=>{var c,d;a instanceof stream_1.Readable&&(a=await (0,exports.toBuffer)(a));const e=await getImageProcessingLibrary();if("sharp"in e&&"function"===typeof(null===(c=e.sharp)||void 0===c?void 0:c.default))return a=e.sharp.default(a),c=await a.metadata(),{buffer:await a.resize(b).jpeg({quality:50}).toBuffer(),
original:{width:c.width,height:c.height}};if("jimp"in e&&"function"===typeof(null===(d=e.jimp)||void 0===d?void 0:d.read)){const {read:k,MIME_JPEG:h,RESIZE_BILINEAR:m,AUTO:p}=e.jimp;a=await k(a);c={width:a.getWidth(),height:a.getHeight()};return{buffer:await a.quality(50).resize(b,p,m).getBufferAsync(h),original:c}}throw new boom_1.Boom("No image processing library available");};exports.extractImageThumb=extractImageThumb;
const encodeBase64EncodedStringForUpload=a=>encodeURIComponent(a.replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,""));exports.encodeBase64EncodedStringForUpload=encodeBase64EncodedStringForUpload;
const generateProfilePicture=async a=>{var b,c;a=Buffer.isBuffer(a)?a:"url"in a?a.url.toString():await (0,exports.toBuffer)(a.stream);const d=await getImageProcessingLibrary();if("sharp"in d&&"function"===typeof(null===(b=d.sharp)||void 0===b?void 0:b.default))b=d.sharp.default(a).resize(640,640).jpeg({quality:50}).toBuffer();else if("jimp"in d&&"function"===typeof(null===(c=d.jimp)||void 0===c?void 0:c.read)){const {read:e,MIME_JPEG:k,RESIZE_BILINEAR:h}=d.jimp;b=await e(a);c=Math.min(b.getWidth(),
b.getHeight());b=b.crop(0,0,c,c).quality(50).resize(640,640,h).getBufferAsync(k)}else throw new boom_1.Boom("No image processing library available");return{img:await b}};exports.generateProfilePicture=generateProfilePicture;const mediaMessageSHA256B64=a=>{a=Object.values(a)[0];return(null===a||void 0===a?void 0:a.fileSha256)&&Buffer.from(a.fileSha256).toString("base64")};exports.mediaMessageSHA256B64=mediaMessageSHA256B64;
async function getAudioDuration(a){const b=await Promise.resolve().then(()=>__importStar(require("music-metadata")));let c;if(Buffer.isBuffer(a))c=await b.parseBuffer(a,void 0,{duration:!0});else if("string"===typeof a){a=(0,fs_1.createReadStream)(a);try{c=await b.parseStream(a,void 0,{duration:!0})}finally{a.destroy()}}else c=await b.parseStream(a,void 0,{duration:!0});return c.format.duration}
async function getAudioWaveform(a,b){try{var {default:c}=await eval("import('audio-decode')");if(Buffer.isBuffer(a))var d=a;else if("string"===typeof a){var e=(0,fs_1.createReadStream)(a);d=await (0,exports.toBuffer)(e)}else d=await (0,exports.toBuffer)(a);const k=(await c(d)).getChannelData(0),h=Math.floor(k.length/64);a=[];for(c=0;64>c;c++){d=h*c;e=0;for(let l=0;l<h;l++)e+=Math.abs(k[d+l]);a.push(e/h)}const m=Math.pow(Math.max(...a),-1),p=a.map(l=>l*m);return new Uint8Array(p.map(l=>Math.floor(100*
l)))}catch(k){null===b||void 0===b||b.debug("Failed to generate waveform: "+k)}}const toReadable=a=>{const b=new stream_1.Readable({read:()=>{}});b.push(a);b.push(null);return b};exports.toReadable=toReadable;const toBuffer=async a=>{const b=[];for await(const c of a)b.push(c);a.destroy();return Buffer.concat(b)};exports.toBuffer=toBuffer;
const getStream=async(a,b)=>Buffer.isBuffer(a)?{stream:(0,exports.toReadable)(a),type:"buffer"}:"stream"in a?{stream:a.stream,type:"readable"}:a.url.toString().startsWith("http://")||a.url.toString().startsWith("https://")?{stream:await (0,exports.getHttpStream)(a.url,b),type:"remote"}:{stream:(0,fs_1.createReadStream)(a.url),type:"file"};exports.getStream=getStream;
async function generateThumbnail(a,b,c){var d;let e,k;if("image"===b){const {buffer:h,original:m}=await (0,exports.extractImageThumb)(a);e=h.toString("base64");m.width&&m.height&&(k={width:m.width,height:m.height})}else if("video"===b){b=(0,path_1.join)(getTmpFilesDirectory(),(0,generics_1.generateMessageIDV2)()+".jpg");try{await extractVideoThumb(a,b,"00:00:00",{width:32,height:32}),e=(await fs_1.promises.readFile(b)).toString("base64"),await fs_1.promises.unlink(b)}catch(h){null===(d=c.logger)||
void 0===d||d.debug("could not generate video thumb: "+h)}}return{thumbnail:e,originalImageDimensions:k}}const getHttpStream=async(a,b={})=>(await axios_1.default.get(a.toString(),{...b,responseType:"stream"})).data;exports.getHttpStream=getHttpStream;
const encryptedStream=async(a,b,{logger:c,saveOriginalFileIfRequired:d,opts:e}={})=>{var k,h;const {stream:m,type:p}=await (0,exports.getStream)(a,e);null===c||void 0===c||c.debug("fetched media stream");const l=Crypto.randomBytes(32),{cipherKey:t,iv:u,macKey:r}=await getMediaKeys(l,b),v=(0,path_1.join)(getTmpFilesDirectory(),b+(0,generics_1.generateMessageIDV2)()+"-enc"),g=(0,fs_1.createWriteStream)(v);let f,n;d&&(n=(0,path_1.join)(getTmpFilesDirectory(),b+(0,generics_1.generateMessageIDV2)()+"-original"),
f=(0,fs_1.createWriteStream)(n));b=0;d=Crypto.createCipheriv("aes-256-cbc",t,u);const q=Crypto.createHmac("sha256",r).update(u),z=Crypto.createHash("sha256"),w=Crypto.createHash("sha256");try{for await(const x of m){b+=x.length;if("remote"===p&&(null===e||void 0===e?0:e.maxContentLength)&&b+x.length>e.maxContentLength)throw new boom_1.Boom(`content length exceeded when encrypting "${p}"`,{data:{media:a,type:p}});f&&(f.write(x)||await (0,events_1.once)(f,"drain"));z.update(x);var A=d.update(x);w.update(A);
q.update(A);g.write(A)}var B=d.final();w.update(B);q.update(B);g.write(B);const y=q.digest().slice(0,10);w.update(y);const C=z.digest(),D=w.digest();g.write(y);g.end();null===(k=null===f||void 0===f?void 0:f.end)||void 0===k||k.call(f);m.destroy();null===c||void 0===c||c.debug("encrypted data successfully");return{mediaKey:l,originalFilePath:n,encFilePath:v,mac:y,fileEncSha256:D,fileSha256:C,fileLength:b}}catch(y){g.destroy();null===(h=null===f||void 0===f?void 0:f.destroy)||void 0===h||h.call(f);
d.destroy();q.destroy();z.destroy();w.destroy();m.destroy();try{await fs_1.promises.unlink(v),n&&await fs_1.promises.unlink(n)}catch(C){null===c||void 0===c||c.error({err:C},"failed deleting tmp files")}throw y;}};exports.encryptedStream=encryptedStream;const DEF_HOST="mmg.whatsapp.net",AES_CHUNK_SIZE=16,toSmallestChunkSize=a=>Math.floor(a/AES_CHUNK_SIZE)*AES_CHUNK_SIZE,getUrlFromDirectPath=a=>`https://${DEF_HOST}${a}`;exports.getUrlFromDirectPath=getUrlFromDirectPath;
const downloadContentFromMessage=async({mediaKey:a,directPath:b,url:c},d,e={})=>{b=c||(0,exports.getUrlFromDirectPath)(b);a=await getMediaKeys(a,d);return(0,exports.downloadEncryptedContent)(b,a,e)};exports.downloadContentFromMessage=downloadContentFromMessage;
const downloadEncryptedContent=async(a,{cipherKey:b,iv:c},{startByte:d,endByte:e,options:k}={})=>{let h=0,m=0,p=!1;if(d){var l=toSmallestChunkSize(d||0);l&&(m=l-AES_CHUNK_SIZE,h=l,p=!0)}l=e?toSmallestChunkSize(e||0)+AES_CHUNK_SIZE:void 0;const t={...((null===k||void 0===k?void 0:k.headers)||{}),Origin:Defaults_1.DEFAULT_ORIGIN};if(m||l)t.Range=`bytes=${m}-`,l&&(t.Range+=l);a=await (0,exports.getHttpStream)(a,{...(k||{}),headers:t,maxBodyLength:Infinity,maxContentLength:Infinity});let u=Buffer.from([]),
r;const v=(g,f)=>{d||e?(f(g.slice(h>=d?void 0:Math.max(d-h,0),h+g.length<e?void 0:Math.max(e-h,0))),h+=g.length):f(g)};k=new stream_1.Transform({transform(g,f,n){g=Buffer.concat([u,g]);f=toSmallestChunkSize(g.length);u=g.slice(f);g=g.slice(0,f);r||(f=c,p&&(f=g.slice(0,AES_CHUNK_SIZE),g=g.slice(AES_CHUNK_SIZE)),r=Crypto.createDecipheriv("aes-256-cbc",b,f),e&&r.setAutoPadding(!1));try{v(r.update(g),q=>this.push(q)),n()}catch(q){n(q)}},final(g){try{v(r.final(),f=>this.push(f)),g()}catch(f){g(f)}}});
return a.pipe(k,{end:!0})};exports.downloadEncryptedContent=downloadEncryptedContent;function extensionForMediaMessage(a){const b=Object.keys(a)[0];return"locationMessage"===b||"liveLocationMessage"===b||"productMessage"===b?".jpeg":a[b].mimetype.split(";")[0].split("/")[1]}
const getWAUploadToServer=({customUploadHosts:a,fetchAgent:b,logger:c,options:d},e)=>async(k,{mediaType:h,fileEncSha256B64:m,timeoutMs:p})=>{var l,t;let u=await e(!1),r;const v=[...a,...u.hosts];m=(0,exports.encodeBase64EncodedStringForUpload)(m);for(const {hostname:f}of v){c.debug(`uploading to "${f}"`);var g=encodeURIComponent(u.auth);g=`https://${f}${Defaults_1.MEDIA_PATH_MAP[h]}/${m}?auth=${g}&token=${m}`;let n;try{if(n=(await axios_1.default.post(g,(0,fs_1.createReadStream)(k),{...d,maxRedirects:0,
headers:{...(d.headers||{}),"Content-Type":"application/octet-stream",Origin:Defaults_1.DEFAULT_ORIGIN},httpsAgent:b,timeout:p,responseType:"json",maxBodyLength:Infinity,maxContentLength:Infinity})).data,(null===n||void 0===n?0:n.url)||(null===n||void 0===n?0:n.directPath)){r={mediaUrl:n.url,directPath:n.direct_path};break}else throw u=await e(!0),Error(`upload failed, reason: ${JSON.stringify(n)}`);}catch(q){axios_1.default.isAxiosError(q)&&(n=null===(l=q.response)||void 0===l?void 0:l.data),g=f===
(null===(t=v[u.hosts.length-1])||void 0===t?void 0:t.hostname),c.warn({trace:q.stack,uploadResult:n},`Error in uploading to ${f} ${g?"":", retrying..."}`)}}if(!r)throw new boom_1.Boom("Media upload failed on all hosts",{statusCode:500});return r};exports.getWAUploadToServer=getWAUploadToServer;
const getMediaRetryKey=a=>(0,crypto_1.hkdf)(a,32,{info:"WhatsApp Media Retry Notification"}),encryptMediaRetryRequest=async(a,b,c)=>{var d=WAProto_1.proto.ServerErrorReceipt.encode({stanzaId:a.id}).finish();const e=Crypto.randomBytes(12);b=await getMediaRetryKey(b);d=(0,crypto_1.aesEncryptGCM)(d,b,e,Buffer.from(a.id));return{tag:"receipt",attrs:{id:a.id,to:(0,WABinary_1.jidNormalizedUser)(c),type:"server-error"},content:[{tag:"encrypt",attrs:{},content:[{tag:"enc_p",attrs:{},content:d},{tag:"enc_iv",
attrs:{},content:e}]},{tag:"rmr",attrs:{jid:a.remoteJid,from_me:(!!a.fromMe).toString(),participant:a.participant||void 0}}]}};exports.encryptMediaRetryRequest=encryptMediaRetryRequest;
const decodeMediaRetryNode=a=>{var b=(0,WABinary_1.getBinaryNodeChild)(a,"rmr");b={key:{id:a.attrs.id,remoteJid:b.attrs.jid,fromMe:"true"===b.attrs.from_me,participant:b.attrs.participant}};var c=(0,WABinary_1.getBinaryNodeChild)(a,"error");c?(a=+c.attrs.code,b.error=new boom_1.Boom(`Failed to re-upload media (${a})`,{data:c.attrs,statusCode:(0,exports.getStatusCodeForMediaRetry)(a)})):(c=(0,WABinary_1.getBinaryNodeChild)(a,"encrypt"),a=(0,WABinary_1.getBinaryNodeChildBuffer)(c,"enc_p"),c=(0,WABinary_1.getBinaryNodeChildBuffer)(c,
"enc_iv"),a&&c?b.media={ciphertext:a,iv:c}:b.error=new boom_1.Boom("Failed to re-upload media (missing ciphertext)",{statusCode:404}));return b};exports.decodeMediaRetryNode=decodeMediaRetryNode;const decryptMediaRetryData=async({ciphertext:a,iv:b},c,d)=>{c=await getMediaRetryKey(c);a=(0,crypto_1.aesDecryptGCM)(a,c,b,Buffer.from(d));return WAProto_1.proto.MediaRetryNotification.decode(a)};exports.decryptMediaRetryData=decryptMediaRetryData;const getStatusCodeForMediaRetry=a=>MEDIA_RETRY_STATUS_MAP[a];
exports.getStatusCodeForMediaRetry=getStatusCodeForMediaRetry;const MEDIA_RETRY_STATUS_MAP={[WAProto_1.proto.MediaRetryNotification.ResultType.SUCCESS]:200,[WAProto_1.proto.MediaRetryNotification.ResultType.DECRYPTION_ERROR]:412,[WAProto_1.proto.MediaRetryNotification.ResultType.NOT_FOUND]:404,[WAProto_1.proto.MediaRetryNotification.ResultType.GENERAL_ERROR]:418};
