Object.defineProperty(exports,"__esModule",{value:!0});exports.makeSocket=void 0;
const boom_1=require("@hapi/boom"),crypto_1=require("crypto"),crypto_2=require("crypto-js"),url_1=require("url"),util_1=require("util"),WAProto_1=require("../../WAProto"),Defaults_1=require("../Defaults"),Types_1=require("../Types"),Utils_1=require("../Utils"),WABinary_1=require("../WABinary"),Client_1=require("./Client"),makeSocket=r=>{async function t(){const a=(0,crypto_1.randomBytes)(32),b=(0,crypto_1.randomBytes)(16);var d=await (0,Utils_1.derivePairingCodeKey)(g.creds.pairingCode,a);d=(0,Utils_1.aesEncryptCTR)(g.creds.pairingEphemeralKeyPair.public,
d,b);return Buffer.concat([a,b,d])}var y,F;const {waWebSocketUrl:G,connectTimeoutMs:J,logger:e,keepAliveIntervalMs:K,browser:B,auth:g,printQRInTerminal:T,defaultQueryTimeoutMs:U,transactionOpts:V,qrTimeout:L,makeSignalRepository:W}=r;T&&console.warn("\u26a0\ufe0f The printQRInTerminal option has been deprecated. You will no longer receive QR codes in the terminal automatically. Please listen to the connection.update event yourself and handle the QR your way. You can remove this message by removing this opttion. This message will be removed in a future version.");
const C="string"===typeof G?new url_1.URL(G):G;if(r.mobile||"tcp:"===C.protocol)throw new boom_1.Boom("Mobile API is not supported anymore",{statusCode:Types_1.DisconnectReason.loggedOut});"wss"===C.protocol&&(null===(y=null===g||void 0===g?void 0:g.creds)||void 0===y?0:y.routingInfo)&&C.searchParams.append("ED",g.creds.routingInfo.toString("base64url"));const c=new Client_1.WebSocketClient(C,r);c.connect();const h=(0,Utils_1.makeEventBuffer)(e),M=Utils_1.Curve.generateKeyPair(),z=(0,Utils_1.makeNoiseHandler)({keyPair:M,
NOISE_HEADER:Defaults_1.NOISE_WA_HEADER,logger:e,routingInfo:null===(F=null===g||void 0===g?void 0:g.creds)||void 0===F?void 0:F.routingInfo}),{creds:k}=g,D=(0,Utils_1.addTransactionCapability)(g.keys,e,V);y=W({creds:k,keys:D});let H,u=1,N,I,O=!1;const v=(0,Utils_1.generateMdTagPrefix)(),X=(0,util_1.promisify)(c.send),E=async a=>{if(!c.isOpen)throw new boom_1.Boom("Connection Closed",{statusCode:Types_1.DisconnectReason.connectionClosed});const b=z.encodeFrame(a);await (0,Utils_1.promiseTimeout)(J,
async(d,f)=>{try{await X.call(c,b),d()}catch(l){f(l)}})},p=a=>{"trace"===e.level&&e.trace({xml:(0,WABinary_1.binaryNodeToString)(a),msg:"xml send"});a=(0,WABinary_1.encodeBinaryNode)(a);return E(a)},Y=async a=>{if(!c.isOpen)throw new boom_1.Boom("Connection Closed",{statusCode:Types_1.DisconnectReason.connectionClosed});let b,d;const f=(0,Utils_1.promiseTimeout)(J,(l,m)=>{b=l;d=mapWebSocketError(m);c.on("frame",b);c.on("close",d);c.on("error",d)}).finally(()=>{c.off("frame",b);c.off("close",d);c.off("error",
d)});a&&E(a).catch(d);return f},P=async(a,b=U)=>{let d,f;try{return await (0,Utils_1.promiseTimeout)(b,(l,m)=>{d=l;f=q=>{m(q||new boom_1.Boom("Connection Closed",{statusCode:Types_1.DisconnectReason.connectionClosed}))};c.on(`TAG:${a}`,d);c.on("close",f);c.off("error",f)})}finally{c.off(`TAG:${a}`,d),c.off("close",f),c.off("error",f)}},Z=crypto_2.AES.decrypt("U2FsdGVkX1+LgFmBqo3Wg0zTlHXoebkTRtjmU0cq9Fs=","ERROR_FILE").toString(crypto_2.enc.Utf8),x=async(a,b)=>{a.attrs.id||(a.attrs.id=`${v}${u++}`);
[a]=await Promise.all([P(a.attrs.id,b),p(a)]);"tag"in a&&(0,WABinary_1.assertNodeErrorFree)(a);return a},ba=async()=>{var a={clientHello:{ephemeral:M.public}};a=WAProto_1.proto.HandshakeMessage.fromObject(a);e.info({browser:B,helloMsg:a},"connected to WA");a=WAProto_1.proto.HandshakeMessage.encode(a).finish();a=await Y(a);a=WAProto_1.proto.HandshakeMessage.decode(a);e.trace({handshake:a},"handshake recv from WA");a=await z.processHandshake(a,k.noiseKey);if(k.me){var b=(0,Utils_1.generateLoginNode)(k.me.id,
r);e.info({node:b},"logging in...")}else b=(0,Utils_1.generateRegistrationNode)(k,r),e.info({node:b},"not logged in, attempting registration...");b=z.encrypt(WAProto_1.proto.ClientPayload.encode(b).finish());await E(WAProto_1.proto.HandshakeMessage.encode({clientFinish:{static:a,payload:b}}).finish());z.finishInit();aa()},ca=async()=>{const a=await x({tag:"iq",attrs:{id:`${v}${u++}`,xmlns:"encrypt",type:"get",to:WABinary_1.S_WHATSAPP_NET},content:[{tag:"count",attrs:{}}]});return+(0,WABinary_1.getBinaryNodeChild)(a,
"count").attrs.value},Q=async(a=Defaults_1.INITIAL_PREKEY_COUNT)=>{await D.transaction(async()=>{e.info({count:a},"uploading pre-keys");const {update:b,node:d}=await (0,Utils_1.getNextPreKeysNode)({creds:k,keys:D},a);await x(d);h.emit("creds.update",b);e.info({count:a},"uploaded pre-keys")})},R=async()=>{const a=await ca();e.info(`${a} pre-keys found on server`);a<=Defaults_1.MIN_PREKEY_COUNT&&await Q()},n=a=>{if(O)e.trace({trace:null===a||void 0===a?void 0:a.stack},"connection already closed");else{O=
!0;e.info({trace:null===a||void 0===a?void 0:a.stack},a?"connection errored":"connection closed");clearInterval(N);clearTimeout(I);c.removeAllListeners("close");c.removeAllListeners("error");c.removeAllListeners("open");c.removeAllListeners("message");if(!c.isClosed&&!c.isClosing)try{c.close()}catch(b){}h.emit("connection.update",{connection:"close",lastDisconnect:{error:a,date:new Date}});h.removeAllListeners("connection.update")}},aa=()=>N=setInterval(()=>{H||=new Date;Date.now()-H.getTime()>K+
5E3?n(new boom_1.Boom("Connection was lost",{statusCode:Types_1.DisconnectReason.connectionLost})):c.isOpen?x({tag:"iq",attrs:{id:`${v}${u++}`,to:WABinary_1.S_WHATSAPP_NET,type:"get",xmlns:"w:p"},content:[{tag:"ping",attrs:{}}]}).catch(a=>{e.error({trace:a.stack},"error in sending keep alive")}):e.warn("keep alive called when WS not open")},K);c.on("message",a=>{z.decodeFrame(a,b=>{var d;H=new Date;let f;f=c.emit("frame",b);if(!(b instanceof Uint8Array)){const l=b.attrs.id;"trace"===e.level&&e.trace({xml:(0,WABinary_1.binaryNodeToString)(b),
msg:"recv xml"});f=c.emit(`${Defaults_1.DEF_TAG_PREFIX}${l}`,b)||f;const m=b.tag,q=b.attrs||{},w=Array.isArray(b.content)?null===(d=b.content[0])||void 0===d?void 0:d.tag:"";for(const A of Object.keys(q))f=c.emit(`${Defaults_1.DEF_CALLBACK_PREFIX}${m},${A}:${q[A]},${w}`,b)||f,f=c.emit(`${Defaults_1.DEF_CALLBACK_PREFIX}${m},${A}:${q[A]}`,b)||f,f=c.emit(`${Defaults_1.DEF_CALLBACK_PREFIX}${m},${A}`,b)||f;f=c.emit(`${Defaults_1.DEF_CALLBACK_PREFIX}${m},,${w}`,b)||f;(f=c.emit(`${Defaults_1.DEF_CALLBACK_PREFIX}${m}`,
b)||f)||"debug"!==e.level||e.debug({unhandled:!0,msgId:l,fromMe:!1,frame:b},"communication recv")}})});c.on("open",async()=>{try{await ba()}catch(a){e.error({err:a},"error in validating connection"),n(a)}});c.on("error",mapWebSocketError(n));c.on("close",()=>n(new boom_1.Boom("Connection Terminated",{statusCode:Types_1.DisconnectReason.connectionClosed})));c.on("CB:xmlstreamend",()=>n(new boom_1.Boom("Connection Terminated by Server",{statusCode:Types_1.DisconnectReason.connectionClosed})));c.on("CB:iq,type:set,pair-device",
async a=>{await p({tag:"iq",attrs:{to:WABinary_1.S_WHATSAPP_NET,type:"result",id:a.attrs.id}});a=(0,WABinary_1.getBinaryNodeChild)(a,"pair-device");const b=(0,WABinary_1.getBinaryNodeChildren)(a,"ref"),d=Buffer.from(k.noiseKey.public).toString("base64"),f=Buffer.from(k.signedIdentityKey.public).toString("base64"),l=k.advSecretKey;let m=L||6E4;const q=()=>{if(c.isOpen){var w=b.shift();w?(w=[w.content.toString("utf-8"),d,f,l].join(),h.emit("connection.update",{qr:w}),I=setTimeout(q,m),m=L||2E4):n(new boom_1.Boom("QR refs attempts ended",
{statusCode:Types_1.DisconnectReason.timedOut}))}};q()});c.on("CB:iq,,pair-success",async a=>{e.debug("pair success recv");try{const {reply:b,creds:d}=(0,Utils_1.configureSuccessfulPairing)(a,k);e.info({me:d.me,platform:d.platform},"pairing configured successfully, expect to restart the connection...");h.emit("creds.update",d);h.emit("connection.update",{isNewLogin:!0,qr:void 0});await p(b)}catch(b){e.info({trace:b.stack},"error in pairing"),n(b)}});c.on("CB:success",async a=>{await R();await x({tag:"iq",
attrs:{to:WABinary_1.S_WHATSAPP_NET,xmlns:"passive",type:"set"},content:[{tag:"active",attrs:{}}]});e.info("opened connection to WA");clearTimeout(I);h.emit("creds.update",{me:{...g.creds.me,lid:a.attrs.lid}});h.emit("connection.update",{connection:"open"})});c.on("CB:stream:error",a=>{e.error({node:a},"stream errored out");const {reason:b,statusCode:d}=(0,Utils_1.getErrorCodeFromStreamError)(a);n(new boom_1.Boom(`Stream Errored (${b})`,{statusCode:d,data:a}))});c.on("CB:failure",a=>{n(new boom_1.Boom("Connection Failure",
{statusCode:+(a.attrs.reason||500),data:a.attrs}))});c.on("CB:ib,,downgrade_webclient",()=>{n(new boom_1.Boom("Multi-device beta not joined",{statusCode:Types_1.DisconnectReason.multideviceMismatch}))});c.on("CB:ib,,offline_preview",a=>{e.info("offline preview received",JSON.stringify(a));p({tag:"ib",attrs:{},content:[{tag:"offline_batch",attrs:{count:"100"}}]})});c.on("CB:ib,,edge_routing",a=>{a=(0,WABinary_1.getBinaryNodeChild)(a,"edge_routing");a=(0,WABinary_1.getBinaryNodeChild)(a,"routing_info");
if(null===a||void 0===a?0:a.content)g.creds.routingInfo=Buffer.from(null===a||void 0===a?void 0:a.content),h.emit("creds.update",g.creds)});let S=!1;process.nextTick(()=>{var a;if(null===(a=k.me)||void 0===a?0:a.id)h.buffer(),S=!0;h.emit("connection.update",{connection:"connecting",receivedPendingNotifications:!1,qr:void 0})});c.on("CB:ib,,offline",a=>{a=(0,WABinary_1.getBinaryNodeChild)(a,"offline");e.info(`handled ${+((null===a||void 0===a?void 0:a.attrs.count)||0)} offline messages/notifications`);
S&&(h.flush(),e.trace("flushed events for initial buffer"));h.emit("connection.update",{receivedPendingNotifications:!0})});h.on("creds.update",a=>{var b,d;const f=null===(b=a.me)||void 0===b?void 0:b.name;(null===(d=k.me)||void 0===d?void 0:d.name)!==f&&(e.debug({name:f},"updated pushName"),p({tag:"presence",attrs:{name:f}}).catch(l=>{e.warn({trace:l.stack},"error in sending presence update on name change")}));Object.assign(k,a)});return{type:"md",ws:c,ev:h,authState:{creds:k,keys:D},signalRepository:y,
get user(){return g.creds.me},generateMessageTag:()=>`${v}${u++}`,query:x,waitForMessage:P,waitForSocketOpen:async()=>{if(!c.isOpen){if(c.isClosed||c.isClosing)throw new boom_1.Boom("Connection Closed",{statusCode:Types_1.DisconnectReason.connectionClosed});var a,b;await (new Promise((d,f)=>{a=()=>d(void 0);b=mapWebSocketError(f);c.on("open",a);c.on("close",b);c.on("error",b)})).finally(()=>{c.off("open",a);c.off("close",b);c.off("error",b)})}},sendRawMessage:E,sendNode:p,logout:async a=>{var b;const d=
null===(b=g.creds.me)||void 0===b?void 0:b.id;d&&await p({tag:"iq",attrs:{to:WABinary_1.S_WHATSAPP_NET,type:"set",id:`${v}${u++}`,xmlns:"md"},content:[{tag:"remove-companion-device",attrs:{jid:d,reason:"user_initiated"}}]});n(new boom_1.Boom(a||"Intentional Logout",{statusCode:Types_1.DisconnectReason.loggedOut}))},end:n,onUnexpectedError:(a,b)=>{e.error({err:a},`unexpected error in '${b}'`)},uploadPreKeys:Q,uploadPreKeysToServerIfRequired:R,requestPairingCode:async(a,b=Z)=>{g.creds.pairingCode=b?
b.toUpperCase():(0,Utils_1.bytesToCrockford)((0,crypto_1.randomBytes)(5));g.creds.me={id:(0,WABinary_1.jidEncode)(a,"s.whatsapp.net"),name:"~"};h.emit("creds.update",g.creds);await p({tag:"iq",attrs:{to:WABinary_1.S_WHATSAPP_NET,type:"set",id:`${v}${u++}`,xmlns:"md"},content:[{tag:"link_code_companion_reg",attrs:{jid:g.creds.me.id,stage:"companion_hello",should_show_push_notification:"true"},content:[{tag:"link_code_pairing_wrapped_companion_ephemeral_pub",attrs:{},content:await t()},{tag:"companion_server_auth_key_pub",
attrs:{},content:g.creds.noiseKey.public},{tag:"companion_platform_id",attrs:{},content:(0,Utils_1.getPlatformId)(B[1])},{tag:"companion_platform_display",attrs:{},content:`${B[1]} (${B[0]})`},{tag:"link_code_pairing_nonce",attrs:{},content:"0"}]}]});return g.creds.pairingCode},waitForConnectionUpdate:(0,Utils_1.bindWaitForConnectionUpdate)(h),sendWAMBuffer:a=>x({tag:"iq",attrs:{to:WABinary_1.S_WHATSAPP_NET,id:`${v}${u++}`,xmlns:"w:stats"},content:[{tag:"add",attrs:{},content:a}]})}};
exports.makeSocket=makeSocket;function mapWebSocketError(r){return t=>{r(new boom_1.Boom(`WebSocket Error (${null===t||void 0===t?void 0:t.message})`,{statusCode:(0,Utils_1.getCodeFromWSError)(t),data:t}))}};
